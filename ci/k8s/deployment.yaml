apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: reportserver
spec:
  replicas: 1
  selector:
    matchLabels:
      run: reportserver
  template:
    metadata:
      labels:
        run: reportserver
        akvo-report-server-version: ${TRAVIS_COMMIT}
        app: reportserver
    spec:
      containers:
      - name: reportserver
        image: akvo/akvo-reportserver:${TRAVIS_COMMIT}
        ports:
        - containerPort: 8080
        livenessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 180
        readinessProbe:
          httpGet:
            path: /
            port: 8080
          initialDelaySeconds: 180
        env:
        - name: DISABLE_SSL_DB_CONNECTION
          value: "yes"
        - name: RS_DB_USER
          valueFrom:
            secretKeyRef:
              name: reportserver
              key: rs_db_user
        - name: RS_DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: reportserver
              key: rs_db_password
        - name: RS_DB_NAME
          valueFrom:
            secretKeyRef:
              name: reportserver
              key: rs_db_name
        - name: RS_DB_HOST
          valueFrom:
            secretKeyRef:
              name: reportserver
              key: rs_db_host
        - name: RS_PBE_SALT
          valueFrom:
            secretKeyRef:
              name: reportserver
              key: rs_pbe_salt
        - name: RS_PBE_PASSPHRASE
          valueFrom:
            secretKeyRef:
              name: reportserver
              key: rs_pbe_passphrase
        - name: RS_HMAC_PASSPHRASE
          valueFrom:
            secretKeyRef:
              name: reportserver
              key: rs_hmac_passphrase
        - name: RS_EXTRA_FONT_URL
          valueFrom:
            secretKeyRef:
              name: reportserver
              key: rs_extra_font_url
      - name: cloudsql-proxy
        image: eu.gcr.io/cloudsql-docker/gce-proxy:1.16
        command: ["/cloud_sql_proxy",
                  "-instances=akvo-lumen:europe-west1:$(GOOGLE_SQL_DB_INSTANCE)=tcp:5432",
                  "-credential_file=/secrets/cloudsql/credentials.json"]
        securityContext:
          runAsUser: 2  # non-root user
          allowPrivilegeEscalation: false
        env:
          - name: GOOGLE_SQL_DB_INSTANCE
            valueFrom:
              configMapKeyRef:
                name: akvo-rsr
                key: google-sql-db-instance
        volumeMounts:
          - name: "secret-config"
            mountPath: "/secrets/cloudsql/credentials.json"
            subPath: "cloud-database-service-account.json"
            readOnly: true
      volumes:
        - name: "secret-config"
          secret:
            secretName: "rsr-secret"